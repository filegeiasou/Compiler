Line=2, token=KEYWORD, value="int"
Line=2, token=IDENTIFIERS, value="main"
Line=2, token=OPEN_PARENTHESIS, value="("
Line=2, token=KEYWORD, value="int"
Line=2, token=IDENTIFIERS, value="argc"
Line=2, token=SYMBOLS, value=","
Line=2, token=IDENTIFIERS, value="char"
Line=2, token=OPERATORS, value="*"
Line=2, token=OPERATORS, value="*"
Line=2, token=IDENTIFIERS, value="argv"
Line=2, token=CLOSE_PARENTHESIS, value=")"
Line=2, token=OPEN_BRACKET, value="{"
Line=5, token=KEYWORD, value="int"
Line=5, token=IDENTIFIERS, value="num1"
Line=5, token=OPERATORS, value="="
Line=5, token=OPERATORS, value="-"
Line=5, token=INTEGER, value="10"
Line=5, token=DELIMITER, value=";"
Line=6, token=KEYWORD, value="int"
Line=6, token=IDENTIFIERS, value="num2"
Line=6, token=OPERATORS, value="="
Line=6, token=INTEGER, value="0x14FAC2"
Line=6, token=DELIMITER, value=";"
Line=7, token=KEYWORD, value="int"
Line=7, token=IDENTIFIERS, value="num3"
Line=7, token=OPERATORS, value="="
Line=7, token=INTEGER, value="0"
Line=7, token=DELIMITER, value=";"
Line=8, token=KEYWORD, value="int"
Line=8, token=IDENTIFIERS, value="num4"
Line=8, token=OPERATORS, value="="
Line=8, token=INTEGER, value="01244256237"
Line=8, token=INTEGER, value="8"
Line=8, token=DELIMITER, value=";"
Line=9, token=KEYWORD, value="float"
Line=9, token=IDENTIFIERS, value="result"
Line=9, token=OPERATORS, value="="
Line=9, token=FLOAT, value="3.14e-10"
Line=9, token=DELIMITER, value=";"
Line=10, token=KEYWORD, value="float"
Line=10, token=IDENTIFIERS, value="b"
Line=10, token=OPERATORS, value="="
Line=10, token=FLOAT, value="1.1e3"
Line=10, token=UNKNOWN TOKEN, value="."
Line=10, token=INTEGER, value="14"
Line=13, token=IDENTIFIERS, value="result"
Line=13, token=OPERATORS, value="+="
Line=13, token=IDENTIFIERS, value="num1"
Line=13, token=OPERATORS, value="+"
Line=13, token=OPEN_PARENTHESIS, value="("
Line=13, token=IDENTIFIERS, value="num2"
Line=13, token=OPERATORS, value="*"
Line=13, token=IDENTIFIERS, value="num3"
Line=13, token=CLOSE_PARENTHESIS, value=")"
Line=13, token=DELIMITER, value=";"
Line=14, token=IDENTIFIERS, value="result"
Line=14, token=OPERATORS, value="-="
Line=14, token=IDENTIFIERS, value="num2"
Line=14, token=OPERATORS, value="-"
Line=14, token=OPEN_PARENTHESIS, value="("
Line=14, token=IDENTIFIERS, value="num3"
Line=14, token=OPERATORS, value="/"
Line=14, token=IDENTIFIERS, value="num1"
Line=14, token=CLOSE_PARENTHESIS, value=")"
Line=14, token=DELIMITER, value=";"
Line=15, token=SYMBOLS, value="#"
Line=15, token=IDENTIFIERS, value="modulo"
Line=15, token=OPERATORS, value="/="
Line=15, token=IDENTIFIERS, value="num1"
Line=15, token=OPERATORS, value="%"
Line=15, token=IDENTIFIERS, value="num1"
Line=15, token=DELIMITER, value=";"
Line=17, token=IDENTIFIERS, value="char"
Line=17, token=IDENTIFIERS, value="str1"
Line=17, token=OPEN_BRACE, value="["
Line=17, token=INTEGER, value="24"
Line=17, token=CLOSE_BRACE, value="]"
Line=17, token=OPERATORS, value="="
Line=17, token=STRINGS, value=""Compilers Lab""
Line=17, token=DELIMITER, value=";"
Line=20, token=KEYWORD, value="if"
Line=20, token=OPEN_PARENTHESIS, value="("
Line=20, token=IDENTIFIERS, value="num1"
Line=20, token=OPERATORS, value=">="
Line=20, token=IDENTIFIERS, value="num2"
Line=20, token=CLOSE_PARENTHESIS, value=")"
Line=20, token=OPEN_BRACKET, value="{"
Line=21, token=IDENTIFIERS, value="printf"
Line=21, token=OPEN_PARENTHESIS, value="("
Line=21, token=STRINGS, value=""num1 > num2\n""
Line=21, token=CLOSE_PARENTHESIS, value=")"
Line=21, token=DELIMITER, value=";"
Line=22, token=CLOSE_BRACKET, value="}"
Line=22, token=KEYWORD, value="else"
Line=22, token=KEYWORD, value="if"
Line=22, token=OPEN_PARENTHESIS, value="("
Line=22, token=IDENTIFIERS, value="num1"
Line=22, token=OPERATORS, value="<="
Line=22, token=IDENTIFIERS, value="num2"
Line=22, token=CLOSE_PARENTHESIS, value=")"
Line=22, token=OPEN_BRACKET, value="{"
Line=23, token=IDENTIFIERS, value="printf"
Line=23, token=OPEN_PARENTHESIS, value="("
Line=23, token=STRINGS, value=""num1 < than num2\\""
Line=23, token=CLOSE_PARENTHESIS, value=")"
Line=23, token=DELIMITER, value=";"
Line=24, token=CLOSE_BRACKET, value="}"
Line=24, token=KEYWORD, value="else"
Line=24, token=KEYWORD, value="if"
Line=24, token=OPEN_PARENTHESIS, value="("
Line=24, token=IDENTIFIERS, value="num1"
Line=24, token=OPERATORS, value="!="
Line=24, token=OPERATORS, value="="
Line=24, token=IDENTIFIERS, value="num2"
Line=24, token=CLOSE_PARENTHESIS, value=")"
Line=24, token=OPEN_BRACKET, value="{"
Line=25, token=IDENTIFIERS, value="printf"
Line=25, token=OPEN_PARENTHESIS, value="("
Line=25, token=STRINGS, value=""numbers are not equal\"""
Line=25, token=CLOSE_PARENTHESIS, value=")"
Line=25, token=DELIMITER, value=";"
Line=26, token=CLOSE_BRACKET, value="}"
Line=29, token=KEYWORD, value="if"
Line=29, token=OPEN_PARENTHESIS, value="("
Line=29, token=IDENTIFIERS, value="num1"
Line=29, token=OPERATORS, value=">"
Line=29, token=INTEGER, value="0"
Line=29, token=OPERATORS, value="&&"
Line=29, token=OPERATORS, value="&"
Line=29, token=IDENTIFIERS, value="num2"
Line=29, token=OPERATORS, value=">"
Line=29, token=INTEGER, value="0"
Line=29, token=CLOSE_PARENTHESIS, value=")"
Line=29, token=OPEN_BRACKET, value="{"
Line=30, token=IDENTIFIERS, value="printf"
Line=30, token=OPEN_PARENTHESIS, value="("
Line=30, token=STRINGS, value=""Both num1 and num2 are positive\n""
Line=30, token=CLOSE_PARENTHESIS, value=")"
Line=30, token=DELIMITER, value=";"
Line=31, token=CLOSE_BRACKET, value="}"
Line=32, token=KEYWORD, value="else"
Line=32, token=KEYWORD, value="if"
Line=32, token=OPEN_PARENTHESIS, value="("
Line=32, token=IDENTIFIERS, value="num1"
Line=32, token=OPERATORS, value="<"
Line=32, token=INTEGER, value="0"
Line=32, token=UNKNOWN TOKEN, value="|"
Line=32, token=IDENTIFIERS, value="num2"
Line=32, token=OPERATORS, value="!="
Line=32, token=INTEGER, value="0"
Line=32, token=OPERATORS, value="||"
Line=32, token=IDENTIFIERS, value="num3"
Line=32, token=OPERATORS, value="=="
Line=32, token=INTEGER, value="0"
Line=32, token=CLOSE_PARENTHESIS, value=")"
Line=33, token=OPEN_BRACKET, value="{"
Line=34, token=KEYWORD, value="do"
Line=34, token=OPEN_BRACKET, value="{"
Line=35, token=OPERATORS, value="--"
Line=35, token=IDENTIFIERS, value="result"
Line=35, token=DELIMITER, value=";"
Line=36, token=IDENTIFIERS, value="result"
Line=36, token=OPERATORS, value="++"
Line=36, token=DELIMITER, value=";"
Line=38, token=KEYWORD, value="if"
Line=38, token=OPEN_PARENTHESIS, value="("
Line=38, token=IDENTIFIERS, value="result"
Line=38, token=OPERATORS, value="=="
Line=38, token=INTEGER, value="0"
Line=38, token=CLOSE_PARENTHESIS, value=")"
Line=38, token=KEYWORD, value="break"
Line=38, token=DELIMITER, value=";"
Line=39, token=CLOSE_BRACKET, value="}"
Line=39, token=KEYWORD, value="while"
Line=39, token=OPEN_PARENTHESIS, value="("
Line=39, token=OPERATORS, value="!"
Line=39, token=IDENTIFIERS, value="num4"
Line=39, token=OPERATORS, value="=="
Line=39, token=INTEGER, value="0"
Line=39, token=OPERATORS, value="||"
Line=39, token=IDENTIFIERS, value="num3"
Line=39, token=OPERATORS, value="+"
Line=39, token=OPERATORS, value="-"
Line=39, token=OPERATORS, value="="
Line=39, token=INTEGER, value="0"
Line=39, token=CLOSE_PARENTHESIS, value=")"
Line=39, token=DELIMITER, value=";"
Line=40, token=CLOSE_BRACKET, value="}"
Line=44, token=UNKNOWN TOKEN, value="~"
Line=44, token=IDENTIFIERS, value="var"
Line=44, token=SYMBOLS, value="@"
Line=44, token=OPERATORS, value="="
Line=44, token=INTEGER, value="5"
Line=44, token=DELIMITER, value=";"
