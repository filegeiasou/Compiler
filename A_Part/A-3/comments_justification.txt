
==============================================================================================

Υπήρξαν κάποια προβλήματα κατά τη υλοποίηση του κώδικα για την εύρεση των σχολίων.
Συγκεκριμένα το πρόβλημα αφορούσε τη σωστή εύρεση και διαχείριση των σχολίων πολλαπλής γραμμής.
Αν είχε τοποθετηθεί σχόλιο πολλαπλών γραμμών, έπειτα ακολουθούσε μία αλληλουχία από λεκτικές μονάδες (κώδικα)
και μετά υπήρχε ξανά σχόλιο πολλαπλών γραμμών, τότε ο λεκτικός αναλυτής δεν εντόπιζε τον κώδικα που ήταν ανάμεσα στα σχόλια.
Αυτό το πρόβλημα με τη σειρά του μας δημιούργησε το πρόβλημα της λανθασμένης μέτρησης του αριθμού των γραμμών
που όντως αποτελούν κομμάτι κώδικα. Για την καλύτερη κατανόηση του προβλήματος, παρακάτω παρατίθεται ένα
απλό παράδειγμα το οποίο μας προκαλούσε το πρόβλημα που προαναφέρθηκε.

/* sample
   multiple line
   comment */

int main(int argc, char** argv)
{                
   // sample code that will be ignored
   // due to the problem described
   int a = 5;
   int b = 10;

   /* another sample
      multiple line
      comment */

   // This will be the first lexical unit recognized by the analyzer
   printf("Sum: %d", a+b);

   return 0;
}

Οπότε το πρόβλημα ήταν ότι ο λεκτικός αναλυτής δεν έβρισκε τα σχόλια πολλαπλών γραμμών ως μία μονάδα.
Όπως φαίνεται και παραπάνω, κανονικά θα έπρεπε το πρώτο σχόλιο να ήταν μία μονάδα μόνο του, και το δεύτερο άλλη.
Αλλά στο πρόβλημα αυτά θεωρούνταν ένα σχόλιο, επειδή απλώς βρέθηκε το closing tag '*/' των σχολίων.

Για αυτό και παρακάτω αναπτύχθηκε η συνάρτηση handle_comment η οποία επιλύει το παραπάνω πρόβλημα.
Ο κώδικας της συνάρτησης αντλήθηκε απο το αρχείο "Παραδειγματα FLEX αρχείων" το οποίο υπάρχει στο E-Class
στα έγγραφα του εργαστηρίου. Συγκεκριμένα το αρχείο μέσα έχει ένα κομμάτι κώδικα με τίτλο
"the following is one way to eat up C comments".

Ο κώδικας που δίνεται κάνει διαχείριση των σχολίων χωρίς όμως να διαχειρίζεται σωστά και τον
αριθμό των γραμμών. Για αυτό αλλάξαμε τον κώδικα προσθέτοντας μερικές εντολές οι οποίες διασφαλίζουν
ότι η μέτρηση των γραμμών γίνεται σωστά. Επιπλέον, διακρίναμε θέματα κατά την λεκτική ανάλυση
του input.txt αρχείου σχετικά με τον εντοπισμό του EOF (End Of File), συνεπώς τα αποτελέσματα μας ήταν λανθασμένα.
Αυτό μας οδήγησε στην άντληση πληροφοριών από εξωτερικές πηγές και συγκεκριμένα από την πηγής
που αναφέρεται παρακάτω.

Μετά από αναζητήσεις στο διαδίκτυο καταφέραμε να αντλήσουμε πληροφορίες από την εξής πηγή:
https://stackoverflow.com/questions/73767676/flex-cant-handle-eof-in-action-or-how-to

στην οποία αναφέρεται πως σε παλαιότερες εκδόσεις (εώς και την 2.6.0), η συνάρτηση input()
του εργαλείου FLEX, επέστρεφε EOF κάθε φορά που εντόπιζε τέλος του αρχείου (end of file).
Από την 2.6.1 και μετά, η συνάρτηση input() υπέστη αλλαγές και πλέον οι συνάρτηση επιστρέφει
0 όταν εντοπίζει end of input. Οπότε αυτό ήταν ένα workaround του προβλήματος στο οποίο
απαιτήθηκε η χρήση εξωτερικής πηγής για την άντληση πληροφοριών.

==============================================================================================


