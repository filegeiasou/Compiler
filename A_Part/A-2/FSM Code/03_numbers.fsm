// (0[xX][\dA-F]+)|(0[0-7]+)|(([1-9]\d*|0)(\.\d+)?([eE][-]?([1-9][0-9]*|0))?)

START=S0
S0:  0        -> S1
     1-9      -> S2
     *        -> BAD

S1:  .        -> S3
     e E      -> S4
     X x      -> S6
     0-7      -> S7
     \n       -> GOOD
     *        -> BAD

// Integer
S2:  0-9      -> S2
     .        -> S3
     e E      -> S4
     \n	    -> GOOD
     *        -> BAD

// Float
S3:  0-9      -> S10
     *        -> BAD

S10: 0-9      -> S10
     e E      -> S4
     \n       -> GOOD
     *        -> BAD

// Exponential
S4:  1-9      -> S8
     -        -> S5
     0        -> GOOD
     *        -> BAD

S5:  1-9      -> S8
     *        -> BAD
     
// Hexadecimal
S6: A-F 0-9   -> S9
    *         -> BAD

S9: A-F 0-9   -> S9
    \n        -> GOOD
    *         -> BAD

// Octal
S7: 0-7       -> S7
    \n        -> GOOD
    *         -> BAD
    
S8: 0-9       -> S8
     \n       -> GOOD
     *        -> BAD
     
GOOD(OK) : \n ->GOOD
